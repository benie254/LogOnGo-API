# Generated by Django 4.1 on 2022-08-23 01:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('log_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=60)),
                ('message', models.TextField(max_length=5000)),
                ('your_name', models.CharField(blank=True, max_length=120, null=True)),
                ('your_email', models.EmailField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(blank=True, choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Gas', 'Gas')], max_length=60, null=True)),
                ('price_per_litre', models.IntegerField()),
                ('pumps', models.PositiveIntegerField()),
                ('initial_litres_in_tank', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LogReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('eod_reading_lts', models.IntegerField(blank=True, null=True)),
                ('eod_reading_yesterday', models.IntegerField(blank=True, null=True)),
                ('litres_sold_today', models.IntegerField(blank=True, null=True)),
                ('amount_earned_today', models.PositiveBigIntegerField(blank=True, null=True)),
                ('balance', models.PositiveIntegerField(blank=True, null=True)),
                ('first_logged', models.DateTimeField(blank=True, null=True)),
                ('last_edited', models.DateTimeField(blank=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('admin_name', models.CharField(blank=True, max_length=120, null=True)),
                ('admin_email', models.EmailField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MpesaReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('transaction_number', models.PositiveIntegerField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=120, null=True)),
                ('customer_phone_number', models.PositiveBigIntegerField(blank=True, null=True)),
                ('amount', models.PositiveBigIntegerField(blank=True, null=True)),
                ('amount_transferred_to_bank', models.BigIntegerField(blank=True, null=True)),
                ('daily_total', models.BigIntegerField(blank=True, null=True)),
                ('cumulative_amount', models.IntegerField(blank=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('admin_name', models.CharField(blank=True, max_length=120, null=True)),
                ('admin_email', models.EmailField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LogMpesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('transaction_number', models.PositiveIntegerField()),
                ('customer_name', models.CharField(max_length=120)),
                ('customer_phone_number', models.PositiveBigIntegerField()),
                ('amount', models.PositiveBigIntegerField()),
                ('amount_transferred_to_bank', models.BigIntegerField(blank=True, null=True)),
                ('daily_total', models.BigIntegerField(blank=True, null=True)),
                ('cumulative_amount', models.IntegerField(blank=True, null=True)),
                ('first_logged', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_edited', models.DateTimeField(auto_now=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('eod_reading_lts', models.IntegerField()),
                ('eod_reading_yesterday', models.IntegerField(blank=True, null=True)),
                ('balance', models.PositiveIntegerField(blank=True, null=True)),
                ('balance_yesterday', models.PositiveIntegerField(blank=True, null=True)),
                ('first_logged', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_edited', models.DateTimeField(auto_now=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='log_app.fuel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('Equipment Failure', 'Equipment Failure'), ('Physical Injury', 'Physical Injury'), ('EMERGENCY', 'EMERGENCY')], max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('your_name', models.CharField(blank=True, max_length=120, null=True)),
                ('incident_date', models.DateField(default=django.utils.timezone.now)),
                ('date_and_time_reported', models.DateTimeField(auto_now_add=True, null=True)),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FuelReceived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('litres_received', models.PositiveIntegerField()),
                ('received_from', models.CharField(max_length=100)),
                ('date_received', models.DateField(default=django.utils.timezone.now)),
                ('fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='log_app.fuel')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=60)),
                ('announcement', models.TextField(max_length=5000)),
                ('your_name', models.CharField(blank=True, max_length=120, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
