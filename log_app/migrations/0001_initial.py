# Generated by Django 4.1 on 2022-12-02 06:40

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import log_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with this username already exists.'}, help_text='Required. 60 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=60, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('petrol_station', models.CharField(choices=[('Station-Kisii', 'Station-Kisii'), ('Station-Nairobi', 'Station-Nairobi')], error_messages={'invalid_choice': 'Value %r is an invalid choice.'}, max_length=150, verbose_name='petrol station')),
                ('email', models.EmailField(error_messages={'unique': 'A user with this email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('employee_id', models.PositiveIntegerField(choices=[(12345, 12345), (67891, 67891), (102030, 102030), (405060, 405060), (708090, 708090), (112233, 112233), (445566, 445566), (778899, 778899), (101010, 101010), (202020, 202020), (303030, 303030), (404040, 404040), (505050, 505050)], error_messages={'invalid_choice': "No user with this ID '%r' exists.", 'unique': 'A user with this ID already exists.'}, unique=True, verbose_name='employee id')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', log_app.models.MyAccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('subject', models.CharField(default='', max_length=60)),
                ('message', models.TextField(default='', max_length=5000)),
                ('name', models.CharField(default='', max_length=120)),
                ('email', models.EmailField(default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='CreditCardReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('card_name', models.CharField(blank=True, max_length=120, null=True)),
                ('card_no', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000000000000000), django.core.validators.MaxValueValidator(9999999999999999)])),
                ('amount', models.BigIntegerField(blank=True, null=True)),
                ('total_td', models.BigIntegerField(blank=True, null=True)),
                ('cumulative_amount', models.IntegerField(blank=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeleteRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_id', models.IntegerField(blank=True, null=True)),
                ('date', models.CharField(blank=True, max_length=120, null=True)),
                ('date_requested', models.CharField(default=django.utils.timezone.now, max_length=120)),
                ('transaction_no', models.CharField(blank=True, max_length=100, null=True)),
                ('customer', models.CharField(blank=True, max_length=120, null=True)),
                ('customer_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('amount', models.PositiveBigIntegerField(blank=True, null=True)),
                ('to_bank', models.BigIntegerField(blank=True, null=True)),
                ('eod_reading', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('eod_yesterday', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('litres_sold', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('amount_td', models.PositiveBigIntegerField(blank=True, null=True)),
                ('bal', models.PositiveIntegerField(blank=True, null=True)),
                ('card_name', models.CharField(blank=True, max_length=120, null=True)),
                ('card_no', models.IntegerField(blank=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('user', models.CharField(blank=True, max_length=120, null=True)),
                ('admin', models.CharField(blank=True, max_length=120, null=True)),
                ('admin_email', models.EmailField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Gas', 'Gas')], default='', max_length=60)),
                ('pp_litre', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('pumps', models.PositiveIntegerField(default=0)),
                ('tank_init', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('nature', models.CharField(choices=[('equipment', 'equipment'), ('injury', 'injury'), ('emergency', 'emergency')], default='', max_length=100)),
                ('description', models.TextField(default='', max_length=5000)),
                ('name', models.CharField(default='', max_length=120)),
                ('email', models.EmailField(blank=True, max_length=250, null=True)),
                ('reported', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LogReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('eod_reading', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('eod_yesterday', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('litres_sold', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('amount_td', models.PositiveBigIntegerField(blank=True, null=True)),
                ('bal', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('first_logged', models.DateTimeField(blank=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('last_edited', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(default='', max_length=120)),
                ('email', models.EmailField(default='', max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='MpesaReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('transaction_no', models.CharField(blank=True, max_length=100, null=True)),
                ('customer', models.CharField(blank=True, max_length=120, null=True)),
                ('customer_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('amount', models.PositiveBigIntegerField(blank=True, null=True)),
                ('to_bank', models.BigIntegerField(blank=True, null=True)),
                ('total_td', models.BigIntegerField(blank=True, null=True)),
                ('cumulative_amount', models.IntegerField(blank=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Password',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('petrol_station', models.CharField(blank=True, max_length=100, null=True)),
                ('signup_confirmation', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=150)),
                ('petrol_station', models.CharField(blank=True, max_length=150)),
                ('signup_confirmation', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LogMpesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(blank=True, max_length=60, null=True)),
                ('pp_litre', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('long_date', models.CharField(blank=True, max_length=200, null=True)),
                ('transaction_no', models.CharField(default='', max_length=30)),
                ('customer', models.CharField(default='', max_length=120)),
                ('customer_no', models.PositiveBigIntegerField(default=0)),
                ('amount', models.PositiveBigIntegerField(default=0)),
                ('to_bank', models.BigIntegerField(default=0)),
                ('total_td', models.BigIntegerField(blank=True, null=True)),
                ('cumulative_amount', models.IntegerField(blank=True, null=True)),
                ('first_logged', models.DateTimeField(auto_now_add=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('last_edited', models.DateTimeField(auto_now=True, null=True)),
                ('edited_by', models.CharField(blank=True, max_length=120, null=True)),
                ('fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='log_app.fuel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LogCreditCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(blank=True, max_length=60, null=True)),
                ('pp_litre', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('long_date', models.CharField(blank=True, max_length=200, null=True)),
                ('card_name', models.CharField(default='', max_length=120)),
                ('card_no', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1000000000000000), django.core.validators.MaxValueValidator(9999999999999999)])),
                ('amount', models.BigIntegerField(default=0)),
                ('total_td', models.BigIntegerField(blank=True, null=True)),
                ('cumulative_amount', models.IntegerField(blank=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('first_logged', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_edited', models.DateTimeField(auto_now=True, null=True)),
                ('edited_by', models.CharField(blank=True, max_length=120, null=True)),
                ('fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='log_app.fuel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(blank=True, max_length=60, null=True)),
                ('pp_litre', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('long_date', models.CharField(blank=True, max_length=200, null=True)),
                ('eod_reading', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('eod_yesterday', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('litres_sold', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('amount_td', models.PositiveBigIntegerField(blank=True, null=True)),
                ('bal', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('bal_yesterday', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('updated_bal', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('cumulative_litres_td', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('cumulative_amount_td', models.PositiveBigIntegerField(blank=True, null=True)),
                ('cumulative_bal_td', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('first_logged', models.DateTimeField(auto_now_add=True, null=True)),
                ('logged_by', models.CharField(blank=True, max_length=120, null=True)),
                ('last_edited', models.DateTimeField(auto_now=True, null=True)),
                ('edited_by', models.CharField(blank=True, max_length=120, null=True)),
                ('fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='log_app.fuel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FuelReceived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('litres', models.PositiveIntegerField(default=0)),
                ('in_from', models.CharField(default=0, max_length=100)),
                ('total_td', models.PositiveBigIntegerField(default=0)),
                ('fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='log_app.fuel')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('subject', models.CharField(default='', max_length=60)),
                ('announcement', models.TextField(default='', max_length=5000)),
                ('announced_by', models.CharField(blank=True, max_length=120, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
